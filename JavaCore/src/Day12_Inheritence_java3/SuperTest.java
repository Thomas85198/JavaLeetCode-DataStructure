package Day12_Inheritence_java3;

/**
 * 
 * super關鍵字的使用
 * 1. super理解為：父類的
 * 2. super可以調用：屬性、方法、構造器
 * 
 * 3. super的使用:調用屬性和方法
 * 
 * 	  3.1 我們可以在子類的方法或構造器中。通過使用"super.屬性“或”super.方法“的方式，顯示的調用父類
 * 		  中聲明的屬性或方法。但是，通常情況下，我們習慣省略”super“
 *    3.2 特殊情況：當子類和父類中定義了同名的屬性時，我們想要在子類中調用賦類中聲明的屬性，則必續顯示的使用
 *        "super.屬性"的方式，表明調用的是父類別的聲明的屬性。
 *    3.3 特殊情況：當子類和父類中定義了同名的方法時，我們想要在子類中調用賦類中聲明的方法，則必續顯示的使用
 *        "super.方法"的方式，表明調用的是父類別中被重寫的方法。
 * 
 * 4. super調用構造器
 * 	  4.1 我們可以在子類的構造器中顯示”super(形參列表)“的方式，調用父類中聲明指定的構造器
 * 	  4.2 ”super(形參列表)“的使用，必須聲明在子類的構造器的首行！
 * 	  4.2 我們在類的構造器中，針對於”this(形參列表)“或”super(形參列表）"只能選一，不能同時出現
 *    4.4 當我們在構造器中首行，沒有顯示聲明”this(形參列表)“或”super(形參列表）"則默認是調用父類中空參的構造器。
 *    4.5 在類的多個構造器中，至少有一個類的構造器中使用了“super(形參列表)"，調用父類別的構造器
 *    
 *    
 * @author thomas
 *
 */
public class SuperTest {
	public static void main(String[] args) {
		
		Student s = new Student();
		s.show();
		
		System.out.println();
		s.eat();
		
		Student s1 = new Student("Tom", 21, "IT");
		s1.show();
	}
}
